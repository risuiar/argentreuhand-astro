---
// Detectar idioma desde la URL o usar español por defecto
const url = new URL(Astro.request.url);
const pathname = url.pathname;
const currentLang = pathname.startsWith('/de') ? 'de' : 'es';

// Detectar página actual para estado activo
const isBookingPage = pathname.includes('/reservar');
const isHomePage = pathname === '/' || pathname === '/de/' || pathname === '/de';

// Detectar si estamos en una página de detalle del blog
const isBlogDetailPage = pathname.match(/\/blog\/([^\/]+)/);
const blogDocumentId = isBlogDetailPage ? isBlogDetailPage[1] : null;

// Traducciones
const translations = {
  es: {
    tagline: 'Asesoría Fiscal & Consultoría Empresarial',
    nav: {
      inicio: 'Inicio',
      servicios: 'Servicios',
      sobreNosotros: 'Sobre Nosotros',
      blog: 'Blog',
      reservar: 'Reservar Consulta',
      contacto: 'Contacto'
    },
    cta: 'Consulta Gratuita',
    ctaSubtext: 'Luego 150 CHF/hora',
    location: 'Zurich, Suiza',
    phone: '+41 44 123 45 67',
    email: 'info@argentatreuhand.com'
  },
  de: {
    tagline: 'Steuerberatung & Unternehmensberatung',
    nav: {
      inicio: 'Startseite',
      servicios: 'Dienstleistungen',
      sobreNosotros: 'Über uns',
      blog: 'Blog',
      reservar: 'Beratung buchen',
      contacto: 'Kontakt'
    },
    cta: 'Kostenlose Beratung',
    ctaSubtext: 'Dann 150 CHF/Std',
    location: 'Zürich, Schweiz',
    phone: '+41 44 123 45 67',
    email: 'info@argentatreuhand.com'
  }
};

const t = translations[currentLang];

// URLs para cambio de idioma
const getLocalizedUrl = (lang: string) => {
  // Para otras páginas, usar la lógica normal
  if (lang === 'es') {
    return pathname.replace('/de', '') || '/';
  } else {
    return pathname.startsWith('/de') ? pathname : `/de${pathname === '/' ? '' : pathname}`;
  }
};

// Helper para generar URLs localizadas
const getLocalizedLink = (path: string) => {
  if (currentLang === 'de') {
    return path === '/' ? '/de/' : `/de${path}`;
  }
  return path;
};
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-sm border-b border-slate-200 shadow-sm">
  <!-- Top contact bar - Solo desktop -->
  <div class="hidden md:block bg-blue-900 text-white py-1.5 transition-all duration-300">
    <div class="container mx-auto px-4">
      <div class="flex justify-between items-center text-xs">
        <div class="flex items-center space-x-6">
          <div class="flex items-center space-x-2">
            <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
            </svg>
            <span>{t.phone}</span>
          </div>
          <div class="flex items-center space-x-2">
            <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
            </svg>
            <span>{t.email}</span>
          </div>
        </div>
        <div class="flex items-center space-x-2">
          <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
          <span>{t.location}</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Main navigation -->
  <nav class="container mx-auto px-4 py-2 transition-all duration-300 bg-white">
    <!-- Desktop Layout -->
    <div class="hidden lg:flex items-center justify-between">
      <!-- Logo -->
      <div class="flex items-center space-x-3">
        <img
          src="/argentatreuhand-logo.png"
          alt="Argenta Treuhand Logo"
          class="h-10 w-auto object-contain"
        />
      </div>

      <!-- Navigation Links -->
      <div class="flex items-center space-x-3">
        <a
          href={getLocalizedLink('/')}
          class="nav-link text-slate-700 hover:text-blue-600 transition-colors text-sm font-medium"
          data-section="inicio"
        >
          {t.nav.inicio}
        </a>
        <a
          href={getLocalizedLink('/#servicios')}
          class="nav-link text-slate-700 hover:text-blue-600 transition-colors text-sm font-medium"
          data-section="servicios"
        >
          {t.nav.servicios}
        </a>
        <a
          href={getLocalizedLink('/#sobre-nosotros')}
          class="nav-link text-slate-700 hover:text-blue-600 transition-colors text-sm font-medium"
          data-section="sobre-nosotros"
        >
          {t.nav.sobreNosotros}
        </a>
        <a
          href={getLocalizedLink('/blog')}
          class="nav-link text-slate-700 hover:text-blue-600 transition-colors text-sm font-medium"
          data-section="blog"
        >
          {t.nav.blog}
        </a>
        <a
          href={getLocalizedLink('/#contacto')}
          class="nav-link text-slate-700 hover:text-blue-600 transition-colors text-sm font-medium"
          data-section="contacto"
        >
          {t.nav.contacto}
        </a>

        <!-- Language switcher -->
        <div class="flex items-center space-x-1 border-l border-slate-200 pl-2">
          <svg class="h-4 w-4 text-slate-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
          </svg>
          <a
            href={getLocalizedUrl('es')}
            class={`px-2 py-1 rounded text-xs font-medium transition-colors ${currentLang === 'es' ? 'bg-blue-100 text-blue-600' : 'text-slate-600 hover:text-blue-600'}`}
            data-lang="es"
            data-blog-detail={isBlogDetailPage ? 'true' : 'false'}
            data-blog-id={blogDocumentId || ''}
            data-current-lang={currentLang}
          >
            ES
          </a>
          <a
            href={getLocalizedUrl('de')}
            class={`px-2 py-1 rounded text-xs font-medium transition-colors ${currentLang === 'de' ? 'bg-blue-100 text-blue-600' : 'text-slate-600 hover:text-blue-600'}`}
            data-lang="de"
            data-blog-detail={isBlogDetailPage ? 'true' : 'false'}
            data-blog-id={blogDocumentId || ''}
            data-current-lang={currentLang}
          >
            DE
          </a>
        </div>

        <!-- CTA Button -->
        <div class="relative group">
          <a
          href={getLocalizedLink('/reservar/')}
          class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1.5 rounded-lg text-sm font-medium transition-colors block text-center"
          >
            {t.cta}
          </a>
          <div class="absolute top-full left-1/2 transform -translate-x-1/2 mt-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none">
            <div class="bg-slate-800 text-white text-xs px-2 py-1 rounded whitespace-nowrap">
              {t.ctaSubtext}
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Mobile Layout -->
    <div class="lg:hidden">
      <!-- Top row: Logo + Language + Burger -->
      <div class="flex items-center justify-between">
        <!-- Logo compacto -->
        <div class="flex items-center space-x-2">
          <img
            src="/argentatreuhand-logo.png"
            alt="Argenta Treuhand Logo"
            class="h-8 w-auto object-contain"
          />
          <div class="min-w-0">
            <h1 class="text-base font-bold text-slate-900 truncate">Argenta Treuhand</h1>
            <p class="text-xs text-slate-600 truncate hidden sm:block">{t.tagline}</p>
          </div>
        </div>

        <!-- Right side: Language + Burger -->
        <div class="flex items-center space-x-3">
          <!-- Language switcher -->
          <div class="flex items-center space-x-1 bg-slate-100 rounded-lg p-1">
            <a
              href={getLocalizedUrl('es')}
              class={`px-2 py-1 rounded text-xs font-medium transition-colors ${currentLang === 'es' ? 'bg-white text-blue-600 shadow-sm' : 'text-slate-600'}`}
              data-lang="es"
              data-blog-detail={isBlogDetailPage ? 'true' : 'false'}
              data-blog-id={blogDocumentId || ''}
              data-current-lang={currentLang}
            >
              ES
            </a>
            <a
              href={getLocalizedUrl('de')}
              class={`px-2 py-1 rounded text-xs font-medium transition-colors ${currentLang === 'de' ? 'bg-white text-blue-600 shadow-sm' : 'text-slate-600'}`}
              data-lang="de"
              data-blog-detail={isBlogDetailPage ? 'true' : 'false'}
              data-blog-id={blogDocumentId || ''}
              data-current-lang={currentLang}
            >
              DE
            </a>
          </div>

          <!-- Burger Menu Button -->
          <label for="menu-toggle" class="burger-button">
            <div class="burger-icon">
              <span></span>
              <span></span>
              <span></span>
            </div>
          </label>
        </div>
      </div>

      <!-- Hidden checkbox for menu toggle -->
      <input type="checkbox" id="menu-toggle" class="menu-toggle" />

      <!-- Mobile Menu Overlay -->
      <div class="mobile-menu-overlay">
        <div class="mobile-menu">
          <!-- Menu Header -->
          <div class="mobile-menu-header">
            <div class="flex items-center space-x-2">
              <img
                src="/argentatreuhand-logo.png"
                alt="Argenta Treuhand Logo"
                class="h-8 w-auto object-contain"
              />
              <span class="font-bold text-slate-900">Menú</span>
            </div>
            <label for="menu-toggle" class="close-button">
              <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </label>
          </div>

          <!-- Menu Items -->
          <div class="mobile-menu-items">
            <a
              href={getLocalizedLink('/')}
              class="mobile-menu-item"
              data-section="inicio"
            >
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
              </svg>
              {t.nav.inicio}
            </a>

            <a
              href={getLocalizedLink('/#servicios')}
              class="mobile-menu-item"
              data-section="servicios"
            >
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
              </svg>
              {t.nav.servicios}
            </a>

            <a
              href={getLocalizedLink('/#sobre-nosotros')}
              class="mobile-menu-item"
              data-section="sobre-nosotros"
            >
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
              </svg>
              {t.nav.sobreNosotros}
            </a>

            <a
              href={getLocalizedLink('/blog')}
              class="mobile-menu-item"
              data-section="blog"
            >
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
              </svg>
              {t.nav.blog}
            </a>

            <a
              href={getLocalizedLink('/#contacto')}
              class="mobile-menu-item"
              data-section="contacto"
            >
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
              {t.nav.contacto}
            </a>

            <!-- Contact Info -->
            <div class="mobile-menu-divider"></div>

            <a href={`tel:${t.phone}`} class="mobile-menu-item">
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
              </svg>
              {t.phone}
            </a>

            <a href={`mailto:${t.email}`} class="mobile-menu-item">
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
              {t.email}
            </a>
          </div>

          <!-- CTA Button in Menu -->
          <div class="mobile-menu-cta">
            <div class="text-center">
              <a
              href={getLocalizedLink('/reservar/')}
              class="w-full bg-blue-600 hover:bg-blue-700 text-white px-6 py-4 rounded-xl font-medium transition-colors text-center block"
              >
                {t.cta}
              </a>
              <p class="text-xs text-slate-500 mt-2">{t.ctaSubtext}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  /* Fix mobile viewport issues */
  * {
    box-sizing: border-box;
  }

  html, body {
    overflow-x: hidden;
    width: 100%;
    max-width: 100vw;
  }

  /* Burger Menu Styles */
  .menu-toggle {
    display: none;
  }

  .burger-button {
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    transition: background-color 0.2s;
  }

  .burger-button:hover {
    background-color: #f1f5f9;
  }

  .burger-icon {
    width: 24px;
    height: 18px;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .burger-icon span {
    display: block;
    height: 2px;
    width: 100%;
    background-color: #334155;
    border-radius: 1px;
    transition: all 0.3s ease;
  }

  /* Menu Toggle Animation */
  .menu-toggle:checked + .mobile-menu-overlay .burger-icon span:nth-child(1) {
    transform: rotate(45deg) translate(6px, 6px);
  }

  .menu-toggle:checked + .mobile-menu-overlay .burger-icon span:nth-child(2) {
    opacity: 0;
  }

  .menu-toggle:checked + .mobile-menu-overlay .burger-icon span:nth-child(3) {
    transform: rotate(-45deg) translate(6px, -6px);
  }

  /* Mobile Menu Overlay */
  .mobile-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .menu-toggle:checked ~ .mobile-menu-overlay {
    opacity: 1;
    visibility: visible;
  }

  /* Mobile Menu */
  .mobile-menu {
    position: absolute;
    top: 0;
    right: 0;
    width: min(320px, 85vw);
    height: 100vh;
    max-height: 100vh;
    background: white;
    box-shadow: -4px 0 20px rgba(0, 0, 0, 0.1);
    transform: translateX(100%);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
  }

  .menu-toggle:checked ~ .mobile-menu-overlay .mobile-menu {
    transform: translateX(0);
  }

  /* Mobile Menu Header */
  .mobile-menu-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid #e2e8f0;
    background: #f8fafc;
  }

  .close-button {
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    color: #64748b;
    transition: all 0.2s;
  }

  .close-button:hover {
    background-color: #e2e8f0;
    color: #334155;
  }

  /* Mobile Menu Items */
  .mobile-menu-items {
    flex: 1;
    padding: 20px 0;
    overflow-y: auto;
  }

  .mobile-menu-item {
    display: flex;
    align-items: center;
    padding: 16px 20px;
    color: #334155;
    text-decoration: none;
    font-medium: 500;
    transition: all 0.2s;
    border-left: 3px solid transparent;
  }

  .mobile-menu-item:hover {
    background-color: #f1f5f9;
    color: #2563eb;
    border-left-color: #2563eb;
  }

  /* Active state for mobile menu */
  .mobile-menu-item-active {
    background-color: #eff6ff !important;
    color: #2563eb !important;
    border-left-color: #2563eb !important;
    font-weight: 600;
  }
  .mobile-menu-item svg {
    margin-right: 12px;
    flex-shrink: 0;
  }

  .mobile-menu-divider {
    height: 1px;
    background-color: #e2e8f0;
    margin: 16px 20px;
  }

  /* Mobile Menu CTA */
  .mobile-menu-cta {
    padding: 20px;
    border-top: 1px solid #e2e8f0;
    background: #f8fafc;
  }

  /* Prevent body scroll when menu is open */
  .menu-toggle:checked ~ body {
    overflow: hidden;
    position: fixed;
    width: 100%;
  }

  /* Close menu when clicking overlay */
  .mobile-menu-overlay {
    cursor: pointer;
  }

  .mobile-menu {
    cursor: default;
  }

  /* Active navigation styles for desktop */
  .nav-link.active {
    color: #2563eb !important;
    font-weight: 600;
    position: relative;
  }

  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 0;
    right: 0;
    height: 2px;
    background: #2563eb;
    border-radius: 1px;
  }
</style>

<script>
  // Active navigation based on current page and scroll position
  document.addEventListener('DOMContentLoaded', function() {
    const pathname = window.location.pathname;
    const isHomePage = pathname === '/' || pathname === '/de/' || pathname === '/de';
    const isBlogPage = pathname === '/blog' || pathname === '/de/blog' || pathname.startsWith('/blog/') || pathname.startsWith('/de/blog/');

    const navLinks = document.querySelectorAll('.nav-link[data-section]');
    const mobileNavLinks = document.querySelectorAll('.mobile-menu-item[data-section]');

    // Function to set active nav item
    function setActiveNavItem(section) {
      // Update desktop nav
      navLinks.forEach(link => {
        const linkSection = link.getAttribute('data-section');
        if (linkSection === section) {
          link.classList.add('active');
          link.style.color = '#2563eb';
          link.style.fontWeight = '600';
        } else {
          link.classList.remove('active');
          if (!link.classList.contains('text-blue-600')) {
            link.style.color = '#64748b';
            link.style.fontWeight = '500';
          }
        }
      });

      // Update mobile nav
      mobileNavLinks.forEach(link => {
        const linkSection = link.getAttribute('data-section');
        if (linkSection === section) {
          link.classList.add('mobile-menu-item-active');
        } else {
          link.classList.remove('mobile-menu-item-active');
        }
      });
    }

    // Handle blog page
    if (isBlogPage) {
      setActiveNavItem('blog');
    }
    // Handle home page with scroll-based navigation
    else if (isHomePage) {
      const sections = ['inicio', 'servicios', 'sobre-nosotros', 'contacto'];

      function updateActiveNav() {
        let currentSection = 'inicio';

        // Check which section is currently in view
        for (const section of sections) {
          const element = document.getElementById(section);

          if (element) {
            const rect = element.getBoundingClientRect();
            const headerHeight = 120; // Approximate header height

            if (rect.top <= headerHeight && rect.bottom > headerHeight) {
              currentSection = section;
            }
          }
        }

        setActiveNavItem(currentSection);
      }

      // Update on scroll
      let ticking = false;
      window.addEventListener('scroll', function() {
        if (!ticking) {
          requestAnimationFrame(function() {
            updateActiveNav();
            ticking = false;
          });
          ticking = true;
        }
      });

      // Initial update
      setTimeout(updateActiveNav, 100);
    }
  });
</script>

<script>
  // Close menu when clicking on overlay (outside menu)
  document.addEventListener('DOMContentLoaded', function() {
    const overlay = document.querySelector('.mobile-menu-overlay');
    const menu = document.querySelector('.mobile-menu');
    const menuToggle = document.getElementById('menu-toggle');

    if (overlay && menu && menuToggle) {
      overlay.addEventListener('click', function(e) {
        if (e.target === overlay) {
          menuToggle.checked = false;
        }
      });

      // Close menu when clicking on menu items
      const menuItems = document.querySelectorAll('.mobile-menu-item');
      menuItems.forEach(item => {
        item.addEventListener('click', function() {
          menuToggle.checked = false;
        });
      });
    }
  });
</script>

<script>
  // Handle language switching for blog detail pages
  document.addEventListener('DOMContentLoaded', function() {
    const langLinks = document.querySelectorAll('[data-lang]');

    langLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        const isBlogDetail = this.getAttribute('data-blog-detail') === 'true';
        const targetLang = this.getAttribute('data-lang');

        // Only handle blog detail pages
        if (!isBlogDetail) {
          return; // Let normal navigation happen
        }

        e.preventDefault();

        // For blog detail pages, redirect to the blog list in the target language
        // This is a simpler approach that avoids 404 errors
        const newUrl = targetLang === 'es' ? '/blog' : '/de/blog';
        window.location.href = newUrl;
      });
    });
  });
</script>
